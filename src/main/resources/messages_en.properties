worldedit.unavailable=WorldEdit is not available.
worldedit.region.unsupported={0} selection type is not supported.
worldedit.region.incomplete=Selection incomplete.
worldedit.selection.unsupported=Selection of region of type {0} not supported.
worldedit.selector.invalid=Invalid selector {0} for shape {1}.

arbitraryshape.toolarge=Arbitrary shape is too large.
pool.shape.notflat=Pool shape must be flat.

arena.pool.notdefined=This arena's pool is not defined.
arena.start.notdefined=This arena's start region is not defined.
arena.surrounding.notdefined=This arena's surrounding region is not defined.
arena.diving.notdefined=This arena's diving board is not defined.
arena.incomplete=This arena is not complete.

stage.alreadyrunning=This arena already has a stage running.

joinstage.start1={blue}A new `Dé à coudre` game has been started in {yellow}{0}.
joinstage.start2={blue}Use {yellow}\"/dac join\" {blue}to join it.
joinstage.toomanyplayers=There are too many players (and not enough colors).
joinstage.join={0} {blue}has joined the game.
joinstage.playerslist={yellow}Players :
joinstage.playerentry= {yellow}- {green}{0}
joinstage.quit={0} {yellow}has quit the game.
joinstage.stopped={green}Game has been stopped.

quickstart.toomanyplayers=There are too many players (and not enough colors).

game.start={blue}Game starts !
game.playerslist={blue}Players :
game.start.playerentry={gray}{0}{blue}. {1}
game.playerentry={gray}{0}{blue}. {1}: {2}
game.playerturn={blue}It's {0}{blue}'s turn.
game.playerturn.notconnected={0}{blue} is not connected for his/her turn.
game.turn.timedout={red}{0} turn timed out.
game.jump.success={0} {green}succeed.
game.jump.dac={0} {gold}manage to jump in a `dé à coudre`.
game.jump.fail={0} {red}missed his/her jump.
game.player.quit={0} {yellow}quit the game.
game.confirmationneeded={0} {red}has to confirm.
game.finished={blue}The game is finished.
game.winner={green}Winner : {0}
game.rank={gray}{0}{blue}. {1}
game.stopped={blue}The game has been stopped.

classic.enjoy={blue}Enjoy !
classic.jump.confirmation={0} {green}confirmed.
classic.jump.dacconfirmation={0} {gold}confirm with a `dé à coudre`.
classic.jump.dacconfirmation2={gold}Nice !
classic.livesafterdac={gold}He/She now has {0} lives.
classic.jump.confirmationfail={red}He/She has not been able to confirm his/her victory.
classic.livesafterfail={red}He/She has lost one life ({0} remaining).

training.start={blue}Training starts !
training.playerentry={gray}{0}{blue}. {1}{blue}: {green}{2}{blue}, {gold}{3}{blue}, {red}{4}
training.stats.successes={green}Success : {0}
training.stats.dacs={gold}`Dés à coudre` : {0}
training.stats.fails={red}Missed : {0}

colonnisation.start={blue}Strategy game starts !
colonnisation.setup.turns={blue}Setup will last {0} turns.
colonnisation.playerentry={gray}{0}{blue}. {1}: {2}
colonnisation.setup.finished={blue}Setup is terminated.
colonnisation.setup.success={0} {green}succeed.
colonnisation.jump.success={0} {green}gain {1} points. Total : {2}.
colonnisation.multiplier.increment={gold}His/Her multiplier is now {green}{0}{gold}.
colonnisation.multiplier.reset={red}His/Her multiplier has been reset.

suddendeath.start={blue}Sudden Death starts !
suddendeath.playerentry.awaiting={gray}{0}{blue}.{1} {yellow}(Awaiting).
suddendeath.playerentry.failed={gray}{0}{blue}.{1} {red}(Failed).
suddendeath.playerentry.success={gray}{0}{blue}.{1} {green}(Success).
suddendeath.allfailed={blue}All players failed !
suddendeath.elimination={0} {red}is eliminated.
